{"version":3,"file":"static/js/801.04991dd4.chunk.js","mappings":"sOAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uKAWxBC,EAAcH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4QAgB1BG,EAAeL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kVAkB5BK,EAAaP,EAAAA,GAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4B,2BCTrC,EA7BkB,SAAHO,GAA0B,IAApBC,EAAYD,EAAZC,aACnBC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAUhC,OACEI,EAAAA,EAAAA,MAAClB,EAAU,CAACmB,SALO,SAAAC,GACnBA,EAAEC,iBACFV,EAAaK,EAAWM,cAC1B,EAEqCC,SAAA,EACjCL,EAAAA,EAAAA,MAACZ,EAAY,CAAAiB,SAAA,EACXC,EAAAA,EAAAA,KAACC,EAAAA,IAAQ,KACTD,EAAAA,EAAAA,KAAChB,EAAU,CAAAe,SAAC,eAEdC,EAAAA,EAAAA,KAACpB,EAAW,CACVsB,KAAK,aACLC,KAAK,OACLC,WAAS,EACTC,GAAG,SACHC,MAAOd,EACPe,SApBe,SAAAX,GACnBH,EAAcG,EAAEY,OAAOF,MACzB,MAsBF,E,0BCjCaG,EAAOhC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAIhB+B,EAAOjC,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2EAMhBgC,GAAYlC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6FCOrC,EAhBkB,SAAHO,GAAmB,IAAb2B,EAAK3B,EAAL2B,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACEf,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SACFc,EAAMG,KAAI,SAAAC,GAAI,OACbjB,EAAAA,EAAAA,KAACU,EAAI,CAAAX,UACHC,EAAAA,EAAAA,KAACW,EAAS,CAACO,GAAE,WAAAC,OAAaF,EAAKZ,IAAMe,MAAO,CAAEC,KAAMP,GAAWf,SAC5DkB,EAAKK,SAFCL,EAAKZ,GAIT,KAIf,EChBakB,EAAU9C,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BCoChC,EAhCc,WACZ,IAAAS,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CoC,EAAWlC,EAAA,GAAEmC,EAAcnC,EAAA,GAClCoC,GAAwCrC,EAAAA,EAAAA,WAAS,GAAMsC,GAAApC,EAAAA,EAAAA,GAAAmC,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAiBpC,OAHAG,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,wBAAyBR,EACvC,GAAG,CAACA,KAEF9B,EAAAA,EAAAA,MAAA,QAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACiC,EAAS,CAAC9C,aAjBG,SAAA+C,IAChBC,EAAAA,EAAAA,IAAWD,GACRE,MAAK,SAAAC,GACJZ,EAAeY,GAEfR,EAAyC,IAAzBQ,EAAcC,OAChC,IACCC,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,EACd,GACJ,IAQKZ,IACC5B,EAAAA,EAAAA,KAACuB,EAAO,CAAAxB,SAAC,4DAIVyB,EAAYc,OAAS,IAAKtC,EAAAA,EAAAA,KAACyC,EAAS,CAAC5B,MAAOW,MAGnD,C","sources":["components/SearchBar/Searchbar.styled.jsx","components/SearchBar/SearchBar.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const SearchForm = styled.form`\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0 20px 0;\n\n    z-index: 999;\n`;\nexport const SearchInput = styled.input`\n  width: 300px;\n  height: 30px;\n  padding: 5px 5px 5px 15px;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n\n  &::placeholder {\n    font-size: 16px;\n    color: #cccccc;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 140px;\n  height: 40px;\n  font-size: 16px;\n  font-weight: 600;\n  border: none;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 126, 1);\n  }\n`;\nexport const SearchSpan = styled.span`\n  padding: 10px;\n`;\n","import {\n  SearchForm,\n  SearchInput,\n  SearchButton,\n  SearchSpan,\n} from './Searchbar.styled';\nimport { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\n\nconst SearchBar = ({ searchMovies }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchMovies(inputValue.toLowerCase());\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchButton>\n        <BsSearch />\n        <SearchSpan>Search</SearchSpan>\n      </SearchButton>\n      <SearchInput\n        name=\"searchName\"\n        type=\"text\"\n        autoFocus\n        id=\"search\"\n        value={inputValue}\n        onChange={handleChange}\n      ></SearchInput>\n    </SearchForm>\n  );\n};\n\nexport default SearchBar;\n","import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './MovieList.styled';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { styled } from \"styled-components\";\n\nexport const Warning = styled.h2`\n    color: white;\n`","import SearchBar from '../../components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { fetchMovie } from '../../services/TMDB-API';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { Warning } from './Movies.styled';\n\nconst Movie = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const findMovie = queryMovie => {\n    fetchMovie(queryMovie)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n\n        setNoMoviesText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    console.log('This is searchFilms: ', searchFilms);\n  }, [searchFilms]);\n  return (\n    <main>\n      <SearchBar searchMovies={findMovie}></SearchBar>\n      {noMoviesText && (\n        <Warning>\n          There is no movies with this request. Please, try again\n        </Warning>\n      )}\n      {searchFilms.length > 0 && <MovieList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movie;\n"],"names":["SearchForm","styled","_templateObject","_taggedTemplateLiteral","SearchInput","_templateObject2","SearchButton","_templateObject3","SearchSpan","_templateObject4","_ref","searchMovies","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_jsxs","onSubmit","e","preventDefault","toLowerCase","children","_jsx","BsSearch","name","type","autoFocus","id","value","onChange","target","List","Item","MovieLink","Link","films","location","useLocation","map","film","to","concat","state","from","title","Warning","searchFilms","setSearchFilms","_useState3","_useState4","noMoviesText","setNoMoviesText","useEffect","console","log","SearchBar","queryMovie","fetchMovie","then","searchResults","length","catch","error","MovieList"],"sourceRoot":""}