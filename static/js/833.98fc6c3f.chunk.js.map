{"version":3,"file":"static/js/833.98fc6c3f.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/Backlink/BackLink.styled.jsx","components/Backlink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { keyframes, styled } from 'styled-components';\n\nexport const dropAnimation = keyframes`\n  10% {\n    opacity: 0.5;\n  }\n  20% {\n    opacity: 1;\n    top: 3.78em;\n    transform: rotateX(-360deg);\n  }\n  80% {\n    opacity: 1;\n    top: 3.78em;\n    transform: rotateX(-360deg);\n  }\n  90% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0;\n    top: 6.94em;\n  }\n`;\n\nexport const WrapLoader = styled.div`\n  text-align: center;\n\n  font-family: 'Arial Narrow', sans-serif;\n  font-weight: 100;\n  font-size: 1.3em;\n  color: #a3e1f0;\n`;\n\nexport const LetterSpan = styled.span`\n  position: relative;\n  top: 0.63em;\n  display: inline-block;\n  text-transform: uppercase;\n  opacity: 0;\n  transform: rotateX(-90deg);\n\n  animation: ${dropAnimation} 1.2s ease-in-out infinite;\n  animation-delay: ${({ delay }) => delay}s;\n`;\n","import React from 'react';\nimport { WrapLoader, LetterSpan } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <WrapLoader>\n      <h1>\n        <LetterSpan delay={1.2}>L</LetterSpan>\n        <LetterSpan delay={1.3}>o</LetterSpan>\n        <LetterSpan delay={1.4}>a</LetterSpan>\n        <LetterSpan delay={1.5}>d</LetterSpan>\n        <LetterSpan delay={1.6}>i</LetterSpan>\n        <LetterSpan delay={1.7}>n</LetterSpan>\n        <LetterSpan delay={1.8}>g</LetterSpan>\n        <LetterSpan delay={1.9}>.</LetterSpan>\n        <LetterSpan delay={2}>.</LetterSpan>\n        <LetterSpan delay={2.1}>.</LetterSpan>\n      </h1>\n    </WrapLoader>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  margin: 20px;\n  border: solid gray 1px;\n`;\n\nexport const MoviePhoto = styled.img``;\nexport const MovieTitle = styled.h1`\n  color: white;\n`;\n\nexport const MovieScore = styled.a`\n  color: white;\n`;\n\nexport const MovieOverviewTitle = styled.h2`\n  color: white;\n`;\n\nexport const MovieOverview = styled.a`\n  color: white;\n`;\n\nexport const MovieGenresTitle = styled.h2`\n  color: white;\n`;\nexport const MovieGenres = styled.ul`\n  color: white;\n  display: inline-flex;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  color: white;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 18px;\n  color: red;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: pink;\n  cursor: pointer;\n\n  background: transparent;\n  border: none;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { Button } from './BackLink.styled';\n\nconst BackLink = () => {\n  const location = useLocation();\n  return (\n    <Link to={location.state?.from ?? '/'}>\n      <Button type=\"button\">\n        <AiOutlineArrowLeft size=\"24\" /> GO BACK\n      </Button>\n    </Link>\n  );\n};\n\nexport default BackLink;\n","import {\n  MovieContainer,\n  MovieGenres,\n  MovieGenresTitle,\n  MovieOverview,\n  MovieOverviewTitle,\n  MoviePhoto,\n  MovieScore,\n  MovieTitle,\n  ListInfo,\n  LinkInfo,\n} from './MovieDetails.styled';\nimport BackLink from '../../components/Backlink/BackLink';\nimport { fetchMovieDetails } from '../../services/TMDB-API';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  \n\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovieDetails = () => {\n      setLoading(true);\n      fetchMovieDetails(movieId)\n        .then(detailMovie => {\n          setMovie(detailMovie);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    poster_path,\n    original_title,\n  } = movie || {};\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div>\n          <BackLink/>\n        </div>\n        <MovieContainer>\n          {loading && <Loader />}\n          <MoviePhoto\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div>\n            <MovieTitle>\n              {title} ({release_date.slice(0, 4)})\n            </MovieTitle>\n            <MovieScore> Movie score: {popularity}</MovieScore>\n            <MovieOverviewTitle>Overvoew</MovieOverviewTitle>\n            <MovieOverview>{overview}</MovieOverview>\n            <MovieGenresTitle>Genres</MovieGenresTitle>\n            <MovieGenres>\n              {movie.genres &&\n                movie.genres.map(genre => (\n                  <span key={genre.id}>{genre.name}</span>\n                ))}\n            </MovieGenres>\n          </div>\n          <hr />\n        </MovieContainer>\n      </div>\n      <div>\n        <ListInfo>\n          <li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\">Reviewies</LinkInfo>\n          </li>\n        </ListInfo>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["dropAnimation","keyframes","_templateObject","_taggedTemplateLiteral","WrapLoader","styled","_templateObject2","LetterSpan","_templateObject3","_ref","delay","_jsx","children","_jsxs","MovieContainer","MoviePhoto","MovieTitle","MovieScore","_templateObject4","MovieOverviewTitle","_templateObject5","MovieOverview","_templateObject6","MovieGenresTitle","_templateObject7","MovieGenres","_templateObject8","ListInfo","_templateObject9","LinkInfo","Link","_templateObject10","Button","_location$state$from","_location$state","location","useLocation","to","state","from","type","AiOutlineArrowLeft","size","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","useEffect","fetchMovieDetails","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","poster_path","original_title","_Fragment","style","display","justifyContent","BackLink","Loader","src","concat","alt","slice","genres","map","genre","name","id","Outlet"],"sourceRoot":""}